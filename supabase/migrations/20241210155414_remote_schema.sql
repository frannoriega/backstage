

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";






COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";






CREATE TYPE "public"."gate" AS ENUM (
    'S1',
    'S2',
    'S3',
    'S4'
);


ALTER TYPE "public"."gate" OWNER TO "postgres";


CREATE TYPE "public"."movement" AS ENUM (
    'INGRESS',
    'EGRESS'
);


ALTER TYPE "public"."movement" OWNER TO "postgres";


CREATE TYPE "public"."role" AS ENUM (
    'A',
    'B',
    'C',
    'D',
    'E',
    'P',
    'X'
);


ALTER TYPE "public"."role" OWNER TO "postgres";


CREATE TYPE "public"."state" AS ENUM (
    'OUTSIDE',
    'SECURITY',
    'FIELD',
    'BAND',
    'BACKSTAGE'
);


ALTER TYPE "public"."state" OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."activity" (
    "id" bigint NOT NULL,
    "user" bigint NOT NULL,
    "controller" bigint NOT NULL,
    "movement" "public"."movement" NOT NULL,
    "gate" "public"."gate" NOT NULL
);


ALTER TABLE "public"."activity" OWNER TO "postgres";


ALTER TABLE "public"."activity" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."activity_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."controllers" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL,
    "lastname" character varying NOT NULL,
    "email" character varying NOT NULL,
    "dni" integer NOT NULL,
    "gate" "public"."gate"
);


ALTER TABLE "public"."controllers" OWNER TO "postgres";


ALTER TABLE "public"."controllers" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."controllers_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."group_state" (
    "id" bigint NOT NULL,
    "group" bigint NOT NULL,
    "count" smallint DEFAULT '0'::smallint NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);


ALTER TABLE "public"."group_state" OWNER TO "postgres";


ALTER TABLE "public"."group_state" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."group_state_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."groups" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL,
    "size" smallint NOT NULL
);


ALTER TABLE "public"."groups" OWNER TO "postgres";


ALTER TABLE "public"."groups" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."groups_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."user_state" (
    "id" bigint NOT NULL,
    "user" bigint NOT NULL,
    "state" "public"."state" NOT NULL,
    "s1_pass" boolean DEFAULT false NOT NULL,
    "updated_at" timestamp with time zone NOT NULL,
    "s2_pass" boolean DEFAULT false NOT NULL
);


ALTER TABLE "public"."user_state" OWNER TO "postgres";


ALTER TABLE "public"."user_state" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."user_state_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."users" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL,
    "lastname" character varying NOT NULL,
    "dni" integer NOT NULL,
    "email" character varying NOT NULL,
    "phone" bigint NOT NULL,
    "photo_url" character varying,
    "role" "public"."role",
    "valid_from" timestamp with time zone,
    "valid_to" timestamp with time zone,
    "group" bigint,
    "enabled" boolean DEFAULT true NOT NULL
);


ALTER TABLE "public"."users" OWNER TO "postgres";


ALTER TABLE "public"."users" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."users_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."activity"
    ADD CONSTRAINT "activity_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."controllers"
    ADD CONSTRAINT "controllers_email_key" UNIQUE ("email");



ALTER TABLE ONLY "public"."controllers"
    ADD CONSTRAINT "controllers_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."group_state"
    ADD CONSTRAINT "group_state_group_key" UNIQUE ("group");



ALTER TABLE ONLY "public"."group_state"
    ADD CONSTRAINT "group_state_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."groups"
    ADD CONSTRAINT "groups_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."user_state"
    ADD CONSTRAINT "user_state_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."user_state"
    ADD CONSTRAINT "user_state_user_key" UNIQUE ("user");



ALTER TABLE ONLY "public"."users"
    ADD CONSTRAINT "users_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."activity"
    ADD CONSTRAINT "activity_controller_fkey" FOREIGN KEY ("controller") REFERENCES "public"."controllers"("id");



ALTER TABLE ONLY "public"."activity"
    ADD CONSTRAINT "activity_user_fkey" FOREIGN KEY ("user") REFERENCES "public"."users"("id");



ALTER TABLE ONLY "public"."group_state"
    ADD CONSTRAINT "group_state_group_fkey" FOREIGN KEY ("group") REFERENCES "public"."groups"("id");



ALTER TABLE ONLY "public"."user_state"
    ADD CONSTRAINT "user_state_user_fkey" FOREIGN KEY ("user") REFERENCES "public"."users"("id");



ALTER TABLE ONLY "public"."users"
    ADD CONSTRAINT "users_group_fkey" FOREIGN KEY ("group") REFERENCES "public"."groups"("id");



CREATE POLICY "Enable insert for authenticated users only" ON "public"."activity" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable insert for authenticated users only" ON "public"."user_state" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable insert for authenticated users only" ON "public"."users" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable read access for authenticated users" ON "public"."activity" FOR SELECT TO "authenticated" USING (true);



CREATE POLICY "Enable read access for authenticated users" ON "public"."controllers" FOR SELECT TO "authenticated" USING (true);



CREATE POLICY "Enable read access for authenticated users" ON "public"."groups" FOR SELECT TO "authenticated" USING (true);



CREATE POLICY "Enable read access for authenticated users" ON "public"."user_state" FOR SELECT USING (true);



CREATE POLICY "Enable read access for authenticated users" ON "public"."users" FOR SELECT TO "authenticated" USING (true);



ALTER TABLE "public"."activity" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."controllers" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."group_state" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."groups" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."user_state" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."users" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";



































































































































































































GRANT ALL ON TABLE "public"."activity" TO "anon";
GRANT ALL ON TABLE "public"."activity" TO "authenticated";
GRANT ALL ON TABLE "public"."activity" TO "service_role";



GRANT ALL ON SEQUENCE "public"."activity_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."activity_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."activity_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."controllers" TO "anon";
GRANT ALL ON TABLE "public"."controllers" TO "authenticated";
GRANT ALL ON TABLE "public"."controllers" TO "service_role";



GRANT ALL ON SEQUENCE "public"."controllers_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."controllers_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."controllers_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."group_state" TO "anon";
GRANT ALL ON TABLE "public"."group_state" TO "authenticated";
GRANT ALL ON TABLE "public"."group_state" TO "service_role";



GRANT ALL ON SEQUENCE "public"."group_state_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."group_state_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."group_state_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."groups" TO "anon";
GRANT ALL ON TABLE "public"."groups" TO "authenticated";
GRANT ALL ON TABLE "public"."groups" TO "service_role";



GRANT ALL ON SEQUENCE "public"."groups_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."groups_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."groups_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."user_state" TO "anon";
GRANT ALL ON TABLE "public"."user_state" TO "authenticated";
GRANT ALL ON TABLE "public"."user_state" TO "service_role";



GRANT ALL ON SEQUENCE "public"."user_state_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."user_state_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."user_state_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."users" TO "anon";
GRANT ALL ON TABLE "public"."users" TO "authenticated";
GRANT ALL ON TABLE "public"."users" TO "service_role";



GRANT ALL ON SEQUENCE "public"."users_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."users_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."users_id_seq" TO "service_role";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
