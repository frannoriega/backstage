revoke delete on table "public"."roles" from "anon";

revoke insert on table "public"."roles" from "anon";

revoke references on table "public"."roles" from "anon";

revoke select on table "public"."roles" from "anon";

revoke trigger on table "public"."roles" from "anon";

revoke truncate on table "public"."roles" from "anon";

revoke update on table "public"."roles" from "anon";

revoke delete on table "public"."roles" from "authenticated";

revoke insert on table "public"."roles" from "authenticated";

revoke references on table "public"."roles" from "authenticated";

revoke select on table "public"."roles" from "authenticated";

revoke trigger on table "public"."roles" from "authenticated";

revoke truncate on table "public"."roles" from "authenticated";

revoke update on table "public"."roles" from "authenticated";

revoke delete on table "public"."roles" from "service_role";

revoke insert on table "public"."roles" from "service_role";

revoke references on table "public"."roles" from "service_role";

revoke select on table "public"."roles" from "service_role";

revoke trigger on table "public"."roles" from "service_role";

revoke truncate on table "public"."roles" from "service_role";

revoke update on table "public"."roles" from "service_role";

alter table "public"."roles" drop constraint "roles_user_fkey";

alter table "public"."activity" drop constraint "activity_controlled_by_fkey";

alter table "public"."roles" drop constraint "roles_pkey";

drop index if exists "public"."roles_pkey";

drop table "public"."roles";

create table "public"."controllers" (
    "id" bigint generated by default as identity not null,
    "name" character varying not null,
    "lastname" character varying not null,
    "email" character varying not null,
    "dni" numeric not null,
    "created_at" timestamp with time zone not null default now(),
    "gate" gates not null
);


alter table "public"."controllers" enable row level security;

alter table "public"."users" add column "dni" integer not null;

alter table "public"."users" add column "role" role_type not null;

alter table "public"."users" add column "valid_from" timestamp with time zone;

alter table "public"."users" add column "valid_to" timestamp with time zone;

CREATE UNIQUE INDEX controllers_dni_key ON public.controllers USING btree (dni);

CREATE UNIQUE INDEX controllers_email_key ON public.controllers USING btree (email);

CREATE UNIQUE INDEX controllers_pkey ON public.controllers USING btree (id);

CREATE UNIQUE INDEX users_dni_key ON public.users USING btree (dni);

alter table "public"."controllers" add constraint "controllers_pkey" PRIMARY KEY using index "controllers_pkey";

alter table "public"."controllers" add constraint "controllers_dni_key" UNIQUE using index "controllers_dni_key";

alter table "public"."controllers" add constraint "controllers_email_key" UNIQUE using index "controllers_email_key";

alter table "public"."users" add constraint "users_dni_key" UNIQUE using index "users_dni_key";

alter table "public"."activity" add constraint "activity_controlled_by_fkey" FOREIGN KEY (controlled_by) REFERENCES controllers(id) not valid;

alter table "public"."activity" validate constraint "activity_controlled_by_fkey";

grant delete on table "public"."controllers" to "anon";

grant insert on table "public"."controllers" to "anon";

grant references on table "public"."controllers" to "anon";

grant select on table "public"."controllers" to "anon";

grant trigger on table "public"."controllers" to "anon";

grant truncate on table "public"."controllers" to "anon";

grant update on table "public"."controllers" to "anon";

grant delete on table "public"."controllers" to "authenticated";

grant insert on table "public"."controllers" to "authenticated";

grant references on table "public"."controllers" to "authenticated";

grant select on table "public"."controllers" to "authenticated";

grant trigger on table "public"."controllers" to "authenticated";

grant truncate on table "public"."controllers" to "authenticated";

grant update on table "public"."controllers" to "authenticated";

grant delete on table "public"."controllers" to "service_role";

grant insert on table "public"."controllers" to "service_role";

grant references on table "public"."controllers" to "service_role";

grant select on table "public"."controllers" to "service_role";

grant trigger on table "public"."controllers" to "service_role";

grant truncate on table "public"."controllers" to "service_role";

grant update on table "public"."controllers" to "service_role";

create policy "Enable insert for authenticated users only"
on "public"."activity"
as permissive
for insert
to authenticated
with check (true);



